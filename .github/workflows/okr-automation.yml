name: üéØ OKR Automation

on:
  schedule:
    # Ejecutar todos los d√≠as a las 9:00 AM Colombia time (UTC-5)
    - cron: '0 14 * * *'
  
  workflow_dispatch:
    inputs:
      action:
        description: 'Acci√≥n a ejecutar'
        required: true
        default: 'sync-metrics'
        type: choice
        options:
          - sync-metrics
          - generate-report
          - check-health
          - update-progress

  issues:
    types: [opened, edited, labeled]
  
  issue_comment:
    types: [created]

env:
  GA4_PROPERTY_ID: ${{ secrets.GA4_PROPERTY_ID }}
  GSC_PROPERTY: ${{ secrets.GSC_PROPERTY }}
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

jobs:
  sync-metrics:
    name: üìä Sincronizar M√©tricas
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'sync-metrics')
    
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Instalar dependencias
        run: |
          pip install -r requirements.txt
      
      - name: üìä Sync Google Analytics
        run: |
          python scripts/sync-analytics.py
        env:
          GA4_CREDENTIALS: ${{ secrets.GA4_CREDENTIALS }}
      
      - name: üîç Sync Search Console
        run: |
          python scripts/sync-search-console.py
        env:
          GSC_CREDENTIALS: ${{ secrets.GSC_CREDENTIALS }}
      
      - name: üíæ Sync CRM Data
        run: |
          python scripts/sync-crm-data.py
      
      - name: üìà Actualizar Progress en Issues
        uses: actions/github-script@v6
        with:
          script: |
            const metrics = require('./metrics-latest.json');
            
            // Buscar issues con label "key-result"
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'key-result',
              state: 'open'
            });
            
            for (const issue of issues.data) {
              // Extraer m√©trica del issue
              const body = issue.body;
              const metricMatch = body.match(/M√©trica Actual: ([\d,]+)/);
              
              if (metricMatch) {
                const currentValue = metrics[issue.title] || 0;
                const progress = calculateProgress(currentValue);
                
                // Actualizar issue con nueva m√©trica
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: updateMetricInBody(body, currentValue, progress)
                });
                
                // Actualizar proyecto field
                await updateProjectField(issue.id, 'Progress', progress);
              }
            }

  check-okr-health:
    name: üè• Check OKR Health
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'check-health')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: üîç Analizar Estado de OKRs
        uses: actions/github-script@v6
        with:
          script: |
            // Obtener todos los OKRs
            const okrs = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'objetivo',
              state: 'open'
            });
            
            const alerts = [];
            
            for (const okr of okrs.data) {
              // Verificar progreso
              const progress = extractProgress(okr.body);
              const daysLeft = calculateDaysLeft('2025-03-31');
              const expectedProgress = calculateExpectedProgress(daysLeft);
              
              if (progress < expectedProgress - 10) {
                alerts.push({
                  okr: okr.title,
                  status: 'üî¥ Off Track',
                  message: `Progreso actual: ${progress}%, Esperado: ${expectedProgress}%`
                });
                
                // Actualizar label
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: okr.number,
                  labels: ['at-risk']
                });
              }
            }
            
            // Enviar alertas si hay OKRs en riesgo
            if (alerts.length > 0) {
              await sendSlackAlert(alerts);
            }

  weekly-update:
    name: üìù Weekly Update Reminder
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 13 * * 1' # Lunes 8 AM Colombia
    
    steps:
      - name: Crear Issue de Update Semanal
        uses: actions/github-script@v6
        with:
          script: |
            const date = new Date().toISOString().split('T')[0];
            const weekNumber = getWeekNumber(new Date());
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üìä Weekly Update - Semana ${weekNumber} - ${date}`,
              labels: ['weekly-update', 'okr'],
              assignees: ['yeison-gomez'],
              body: `## üìä Update Semanal - Semana ${weekNumber}
              
              ### üìà Progreso OKRs
              
              **Objetivo 1: Tr√°fico Org√°nico**
              - Progreso: __%
              - Status: 
              - Highlights:
              - Blockers:
              
              **Objetivo 2: Conversi√≥n**
              - Progreso: __%
              - Status:
              - Highlights:
              - Blockers:
              
              **Objetivo 3: Expansi√≥n Mercados**
              - Progreso: __%
              - Status:
              - Highlights:
              - Blockers:
              
              ### üéØ Prioridades Esta Semana
              1. 
              2. 
              3. 
              
              ### ‚ö†Ô∏è Riesgos y Problemas
              - 
              
              ### üìä M√©tricas Clave
              - Tr√°fico: 
              - Conversi√≥n: 
              - Revenue: 
              
              ### üéâ Wins de la Semana
              - 
              
              cc: @yeison-gomez @growth-team`
            });

  auto-label:
    name: üè∑Ô∏è Auto Label Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'
    
    steps:
      - name: Auto-label por tipo
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue;
            const labels = [];
            
            // Detectar tipo por t√≠tulo
            if (issue.title.includes('[OKR-OBJ]')) {
              labels.push('objetivo', 'okr', 'q1-2025');
            } else if (issue.title.includes('[KR]')) {
              labels.push('key-result', 'okr');
            } else if (issue.title.includes('[INIT]')) {
              labels.push('iniciativa');
            } else if (issue.title.includes('[TASK]')) {
              labels.push('task');
            }
            
            // Detectar √°rea por contenido
            const body = issue.body.toLowerCase();
            if (body.includes('seo') || body.includes('org√°nico')) {
              labels.push('area:seo');
            }
            if (body.includes('conversi√≥n') || body.includes('cro')) {
              labels.push('area:cro');
            }
            if (body.includes('analytics') || body.includes('m√©tricas')) {
              labels.push('area:analytics');
            }
            
            // Detectar prioridad
            if (body.includes('p0') || body.includes('cr√≠tica')) {
              labels.push('priority:critical');
            } else if (body.includes('p1') || body.includes('alta')) {
              labels.push('priority:high');
            }
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: labels
              });
            }

  generate-report:
    name: üìä Generar Reporte
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'generate-report'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Generar Reporte OKR
        run: |
          python scripts/generate-okr-report.py
      
      - name: Commit Reporte
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add okr-system/reports/
          git commit -m "üìä Reporte OKR actualizado - $(date +'%Y-%m-%d')"
          git push